version: "3.8"
services:
  frontend:
    build: ./frontend
    ports:
      - "80:80"
    depends_on:
      - backend

  backend:
    build: ./backend
    environment:
      # existing user‐db
      - POSTGRES_HOST=db
      - POSTGRES_DB=mydb
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      # posts‐db
      - POSTS_DB_HOST=posts_db
      - POSTS_DB=postsdb
      - POSTS_DB_USER=postsuser
      - POSTS_DB_PASSWORD=postspass
      - UPLOAD_FOLDER=/app/uploads
    ports:
      - "5000:5000"
    volumes:
      - uploads:/app/uploads          # <— persistent storage for uploads
    depends_on:
      db:
        condition: service_healthy
      posts_db:
        condition: service_healthy

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=mydb
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "myuser", "-d", "mydb"]
      interval: 2s
      timeout: 2s
      retries: 15

  posts_db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=postsdb
      - POSTGRES_USER=postsuser
      - POSTGRES_PASSWORD=postspass
    ports:
      - "5433:5432"      # host port 5433 → container 5432
    volumes:
      - posts_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postsuser", "-d", "postsdb"]
      interval: 2s
      timeout: 2s
      retries: 15

volumes:
  pgdata:
  posts_pgdata:
  uploads:                
